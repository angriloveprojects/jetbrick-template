<?xml version="1.0" encoding="UTF-8"?>
 
<project default="dist" basedir=".">
    <property file="${basedir}/build.properties" />
 
    <path id="compile.classpath">
        <fileset dir="${basedir}/lib" includes="**/*.jar" />
    </path>
    <path id="compile.sourcepath">
        <pathelement location="${basedir}/src/main/java"/>
    </path>
    <path id="compile.resources">
        <fileset dir="${basedir}/src/main/resources" excludes="**/*.java" />
    </path>
 
    <path id="sources.resources">
        <fileset dir="${basedir}">
            <include name="src/**" />
            <include name="LICENSE.txt" />
            <include name="README.*" />
            <include name="pom.xml" />
            <include name="build.*" />
        </fileset>
    </path>
 
    <target name="clean">
        <delete dir="${build.dir}" quiet="true" />
    </target>
 
    <target name="compile.grammer">
        <property name="antlr.jar" value="${basedir}/lib/antlr/antlr-4.1-complete.jar" />
        <property name="grammer.dir" value="${basedir}/src/main/java/jetbrick/template/parser/grammer" />
        <java jar="${antlr.jar}" fork="yes" dir="${grammer.dir}">
            <arg value="JetTemplateLexer.g4" />
            <arg value="-o" />
            <arg value="." />
        </java>
        <java jar="${antlr.jar}" fork="yes" dir="${grammer.dir}">
            <arg value="-no-listener" />
            <arg value="-visitor" />
            <arg value="JetTemplateParser.g4" />
            <arg value="-o" />
            <arg value="." />
        </java>
        <delete file="${grammer.dir}/JetTemplateLexer.tokens" />
        <delete file="${grammer.dir}/JetTemplateParser.tokens" />
        <delete file="${grammer.dir}/JetTemplateParserBaseVisitor.java" />
    </target>
 
    <target name="compile" depends="clean, compile.grammer">
        <mkdir dir="${classes.dir}" />
        <javac destdir="${classes.dir}"
               classpathref="compile.classpath"
               debug="on" nowarn="true" deprecation="off"
               encoding="${javac.encoding}"
               includeantruntime="off">
            <src refid="compile.sourcepath" />
        </javac>
        <copy todir="${classes.dir}">
            <path refid="compile.resources" />
        </copy>
    </target>
 
    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}" />
        <jar jarfile="${dist.jar}" whenempty="fail">
            <fileset dir="${classes.dir}" includes="**" />
            <manifest>
                <attribute name="Built-By" value="${product.author}" />
                <attribute name="Implementation-Vendor" value="${product.vendor}" />
                <attribute name="Implementation-Title" value="${product.name}" />
                <attribute name="Implementation-Version" value="${product.version}" />
            </manifest>
        </jar>
    </target>
 
    <target name="sources.jar">
        <mkdir dir="${dist.dir}" />
        <jar jarfile="${dist.sources.jar}" whenempty="fail">
            <path refid="sources.resources" />
            <manifest>
                <attribute name="Built-By" value="${product.author}" />
                <attribute name="Implementation-Vendor" value="${product.vendor}" />
                <attribute name="Implementation-Title" value="${product.name}" />
                <attribute name="Implementation-Version" value="${product.version}" />
            </manifest>
        </jar>
    </target>
 
    <target name="javadoc" depends="clean">
        <mkdir dir="${javadoc.dir}" />
        <javadoc destdir="${javadoc.dir}"
                 sourcepathref="compile.sourcepath"
                 classpathref="compile.classpath"
                 windowtitle="${javadoc.title}"
                 encoding="${javac.encoding}" docencoding="${javadoc.encoding}" charset="${javadoc.encoding}"
                 access="${javadoc.access}" version="true" author="true" use="true" splitindex="true"
                 nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false"
                 doctitle="${javadoc.title}" bottom="${javadoc.copyright}"
                 linksource="${javadoc.linksource}"
        />
    </target>
 
    <target name="javadoc.jar" depends="javadoc">
        <mkdir dir="${dist.dir}" />
        <jar jarfile="${dist.javadoc.jar}" whenempty="fail">
            <fileset dir="${javadoc.dir}" includes="**" />
            <manifest>
                <attribute name="Built-By" value="${product.author}" />
                <attribute name="Implementation-Vendor" value="${product.vendor}" />
                <attribute name="Implementation-Title" value="${product.name}" />
                <attribute name="Implementation-Version" value="${product.version}" />
            </manifest>
        </jar>
    </target>
 
    <target name="dist" depends="jar, sources.jar, javadoc.jar">
        <mkdir dir="${dist.dir}" />
        <zip zipfile="${dist.zip}" whenempty="fail">
            <fileset file="${dist.jar}" />
            <fileset dir="${basedir}" includes="lib/*.jar" />
        </zip>
        <zip zipfile="${dist.all.zip}" whenempty="fail">
            <fileset file="${dist.jar}" />
            <fileset file="${dist.sources.jar}" />
            <fileset file="${dist.javadoc.jar}" />
            <fileset dir="${basedir}" includes="lib/**/*.jar" />
        </zip>
    </target>
 
    <ant antfile="${basedir}/maven-deploy.xml" />
 
</project>
