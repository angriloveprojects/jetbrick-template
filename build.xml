<?xml version="1.0" encoding="UTF-8"?>

<project default="compile" basedir=".">
    <property file="${basedir}/build.properties" />

    <property name="product.author" value="Guoqiang Chen" />
    <property name="product.vendor" value="subchen@gmail.com" />
    <property name="product.name" value="jetbrick-template" />
    <property name="product.version" value="1.0.0" />
    <property name="java.source" value="1.6" /> 
	<property name="java.encoding" value="utf-8" /> 

    <path id="compile.classpath">
        <fileset dir="${basedir}/lib" includes="**/*.jar" />
    </path>

    <patternset id="compile.resource">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
        <include name="**/*.jetx" />
        <include name="**/*.txt" />
    </patternset>

    <target name="compile.clean">
    	<!--
        <delete includeemptydirs="true">
            <fileset dir="${basedir}/bin" includes="**" />
        </delete>
        -->
    	<delete dir="${basedir}/bin" />
    	<mkdir dir="${basedir}/bin" />
    </target>

    <target name="compile.grammer">
        <java jar="antlr-4.1-complete.jar" fork="yes" dir="${basedir}/src/main/java/jetbrick/template/parser/grammer">
            <arg value="JetTemplateLexer.g4" />
            <arg value="-o" />
            <arg value="." />
        </java>
        <java jar="antlr-4.1-complete.jar" fork="yes" dir="${basedir}/src/main/java/jetbrick/template/parser/grammer">
            <arg value="-no-listener" />
            <arg value="-visitor" />
            <arg value="JetTemplateParser.g4" />
            <arg value="-o" />
            <arg value="." />
        </java>
        <delete file="${basedir}/src/main/java/jetbrick/template/parser/grammer/JetTemplateLexer.tokens"/>
        <delete file="${basedir}/src/main/java/jetbrick/template/parser/grammer/JetTemplateParser.tokens"/>
        <delete file="${basedir}/src/main/java/jetbrick/template/parser/grammer/JetTemplateParserBaseVisitor.java"/>
    </target>

    <target name="compile" depends="compile.clean, compile.grammer">
        <javac destdir="${basedir}/bin" classpathref="compile.classpath"
               debug="on" encoding="${java.encoding}"
               nowarn="true" deprecation="off"
               source="${java.source}" target="${java.source}"
               includeantruntime="on">
            <src path="${basedir}/src/main/java" />
        </javac>
        <copy todir="${basedir}/bin">
            <fileset dir="${basedir}/src/main/resources" >
                <patternset refid="compile.resource" />
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${basedir}/${product.name}-${product.version}.jar" whenempty="fail">
            <fileset dir="${basedir}/bin">
                <include name="jetbrick/**/*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${product.author}"/>
                <attribute name="Implementation-Vendor" value="${product.vendor}"/>
                <attribute name="Implementation-Title" value="${product.name}"/>
                <attribute name="Implementation-Version" value="${product.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="test.compile">
        <javac destdir="${basedir}/bin" classpathref="compile.classpath"
               debug="on" encoding="${java.encoding}"
               nowarn="true" deprecation="off"
               source="${java.source}" target="${java.source}"
               includeantruntime="on">
            <classpath>
                <pathelement path="${basedir}/bin"/>
            </classpath>
            <src path="${basedir}/src/test/java" />
        </javac>
        <copy todir="${basedir}/bin">
            <fileset dir="${basedir}/src/test/resources" >
                <patternset refid="compile.resource" />
            </fileset>
        </copy>
    </target>

    <target name="test.run" depends="test.compile">
        <java classname="testcase.JetEngineTestCase" classpathref="compile.classpath" fork="yes">
            <classpath>
                <pathelement path="${basedir}/bin"/>
            </classpath>
        </java>
    </target>

</project>
